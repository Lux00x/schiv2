DROP SCHEMA IF EXISTS SCHIV2;
CREATE SCHEMA SCHIV2 COLLATE utf8_bin;
USE SCHIV2;

CREATE TABLE FACULTIES (
  facultyID INT UNSIGNED PRIMARY KEY,
  faculty VARCHAR(255) NOT NULL
);

CREATE TABLE USERS (
  userID INT UNSIGNED PRIMARY KEY,
  firstname VARCHAR(255) NOT NULL,
  lastname VARCHAR(255) NOT NULL,
  email VARCHAR(255) NOT NULL UNIQUE,
  passwordHash CHAR(64) NOT NULL,
  status ENUM('student', 'dozent') NOT NULL DEFAULT 'student',
  admin INT(1) NOT NULL DEFAULT 0,
  disabled INT(1) NOT NULL DEFAULT 0,
  facultyID INT UNSIGNED,

  FOREIGN KEY (facultyID) REFERENCES FACULTIES(facultyID)
);

CREATE TABLE MEETINGS (
  meetingID INT UNSIGNED PRIMARY KEY,
  dozentID INT UNSIGNED NOT NULL,
  description VARCHAR(255) NOT NULL,
  timeFrom DATE NOT NULL,
  timeTo DATE NOT NULL,
  units INT UNSIGNED NOT NULL DEFAULT 0,
  autoConfirmation INT(1) NOT NULL DEFAULT 0,
  deleted INT(1) NOT NULL DEFAULT 0,

  FOREIGN KEY (dozentID) REFERENCES USERS(userID)
);

CREATE TABLE INSCRIPTIONS (
  studentID INT UNSIGNED NOT NULL,
  meetingID INT UNSIGNED NOT NULL,
  confirmed ENUM('ja', 'nein', 'ausstehend') NOT NULL DEFAULT 'ausstehend',
  note TEXT NOT NULL,

  FOREIGN KEY (studentID) REFERENCES USERS(userID),
  FOREIGN KEY (meetingID) REFERENCES MEETINGS(meetingID)
);

CREATE TABLE BLOCKED_STUDENTS (
  dozentID INT UNSIGNED NOT NULL,
  studentID INT UNSIGNED NOT NULL,
  note VARCHAR(255) NOT NULL,

  FOREIGN KEY (dozentID) REFERENCES USERS(userID),
  FOREIGN KEY (studentID) REFERENCES USERS(userID)
);

CREATE TABLE ROOT (
  passwordHash CHAR(64) NOT NULL
);

CREATE TABLE IMAGES (
  imageID INT UNSIGNED PRIMARY KEY,
  image BLOB NOT NULL
);